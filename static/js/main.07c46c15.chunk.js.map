{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routes/PublicRoute.js","components/Login/LoginScreen.jsx","routes/AppRouter.jsx","App.jsx","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PublicRoute","isAuthenticated","Component","component","redirect","rest","props","to","LoginScreen","className","src","alt","placeholder","autoComplete","name","autoFocus","maxLength","minLength","AppRouter","user","useContext","path","init","JSON","parse","localStorage","getItem","App","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"8LAEaA,EAAcC,0B,OCFdC,EACJ,eADIA,EAEH,gBCAGC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAQA,EAAOC,MACb,KAAKJ,EACH,OAAO,2BACFG,EAAOE,SADZ,IAEEC,QAAQ,IAEZ,KAAKN,EACH,MAAO,CACLM,QAAQ,GAGZ,QACE,OAAOJ,I,uBCXAK,EAAc,SAAC,GAKrB,IAJLC,EAII,EAJJA,gBACWC,EAGP,EAHJC,UACAC,EAEI,EAFJA,SACGC,EACC,0DACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEF,UAAW,SAACG,GAAD,OACRL,EAA6C,cAAC,IAAD,CAAUM,GAAIH,IAAzC,cAACF,EAAD,eAAeI,SCZ7BE,EAAc,WACzB,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKC,IAAI,8BAA8BC,IAAI,gBAE7C,iDACA,mDACA,uBAAMF,UAAU,kBAAhB,UACE,uBACEZ,KAAK,OACLe,YAAY,UACZH,UAAU,4BACVI,aAAa,MACbC,KAAK,YACLC,UAAU,KACVC,UAAU,KACVC,UAAU,MAEZ,uBACER,UAAU,gCACVG,YAAY,gBACZE,KAAK,eACLE,UAAU,KACVC,UAAU,IACVpB,KAAK,aAEP,wBAAQY,UAAU,0BAA0BZ,KAAK,SAAjD,+BCvBGqB,EAAY,WAAO,IACtBC,EAASC,qBAAW7B,GAApB4B,KACR,OACE,cAAC,IAAD,UACE,8BACE,cAAC,IAAD,UACE,cAAC,EAAD,CACElB,gBAAiBkB,EAAKpB,OACtBsB,KAAK,SACLjB,SAAS,SACTD,UAAWK,WCXjBc,EAAO,WACX,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,CAAE3B,QAAQ,IAGlD4B,EAAM,WAAO,IAAD,EACEC,qBAAWlC,EAAa,GAAI4B,GAD9B,mBAChBH,EADgB,KACVU,EADU,KAOvB,OAJAC,qBAAU,WACRL,aAAaM,QAAQ,OAAQR,KAAKS,UAAUb,MAC3C,CAACA,IAGF,cAAC5B,EAAY0C,SAAb,CAAsBC,MAAO,CAAEf,OAAMU,YAArC,SACE,cAAC,EAAD,O,MCbNM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.07c46c15.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext()\r\n","export const types = {\r\n  login: \"[auth] login\",\r\n  logout: \"[auth] logout\",\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...action.payload,\r\n        logged: true,\r\n      }\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  redirect,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to={redirect} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React from \"react\"\r\n\r\nexport const LoginScreen = () => {\r\n  return (\r\n    <div className=\"login__main\">\r\n      <div className=\"login__box-content\">\r\n        <div className=\"login__box-img\">\r\n          <img src=\"assets/icons/icon-login.svg\" alt=\"Logo Vote\" />\r\n        </div>\r\n        <h2>Elecciones 2021</h2>\r\n        <h3>Sistema de conteo</h3>\r\n        <form className=\"login__box-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Usuario\"\r\n            className=\"login__box-form__userName\"\r\n            autoComplete=\"off\"\r\n            name=\"userLogin\"\r\n            autoFocus=\"on\"\r\n            maxLength=\"50\"\r\n            minLength=\"2\"\r\n          />\r\n          <input\r\n            className=\"login__box-form__userPassword\"\r\n            placeholder=\"ContraseÃ±a\"\r\n            name=\"userPassword\"\r\n            maxLength=\"50\"\r\n            minLength=\"2\"\r\n            type=\"password\"\r\n          />\r\n          <button className=\"login__box-form__submit\" type=\"submit\">\r\n            Ingresar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"\r\n\r\nimport { PublicRoute } from \"../routes/PublicRoute\"\r\nimport { AuthContext } from \"../auth/AuthContext\"\r\nimport { LoginScreen } from \"../components/Login/LoginScreen\"\r\n\r\nexport const AppRouter = () => {\r\n  const { user } = useContext(AuthContext)\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            isAuthenticated={user.logged}\r\n            path=\"/login\"\r\n            redirect=\"/login\"\r\n            component={LoginScreen}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useEffect, useReducer } from \"react\"\r\n\r\nimport { AuthContext } from \"./auth/AuthContext\"\r\nimport { authReducer } from \"./auth/authReducer\"\r\nimport { AppRouter } from \"./routes/AppRouter\"\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\")) || { logged: false }\r\n}\r\n\r\nexport const App = () => {\r\n  const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(user))\r\n  }, [user])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, dispatch }}>\r\n      <AppRouter />\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { App } from \"./App\"\nimport \"./styles/styles.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}