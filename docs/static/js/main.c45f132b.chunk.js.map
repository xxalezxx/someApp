{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routes/PublicRoute.js","components/Login/LoginScreen.jsx","hooks/useForm.js","routes/PrivateRoute.js","routes/AppRouter.jsx","App.jsx","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PublicRoute","isAuthenticated","Component","component","redirect","rest","props","to","LoginScreen","initialState","useState","values","setvalues","userLogin","userPassword","errors","setErrors","target","name","val","class","length","value","classNameOriginal","className","user","pass","userStatus","passStatus","id","useForm","handleInputChange","verification","src","alt","onSubmit","e","preventDefault","placeholder","autoComplete","autoFocus","maxLength","onChange","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","useContext","path","init","JSON","parse","getItem","App","useReducer","dispatch","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c45f132b.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext()\r\n","export const types = {\r\n  login: \"[auth] login\",\r\n  logout: \"[auth] logout\",\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...action.payload,\r\n        logged: true,\r\n      }\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  redirect,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to={redirect} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React from \"react\"\r\n\r\nimport { useForm } from \"../../hooks/useForm\"\r\n\r\nexport const LoginScreen = () => {\r\n  const [formValues, errors, handleInputChange, , verification] = useForm()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    verification(e)\r\n  }\r\n\r\n  return (\r\n    <div className=\"login__main\">\r\n      <div className=\"login__box-content\">\r\n        <div className=\"login__box-img\">\r\n          <img src=\"assets/icons/icon-login.svg\" alt=\"Logo Vote\" />\r\n        </div>\r\n        <h2>Elecciones 2021</h2>\r\n        <h3>Sistema de conteo</h3>\r\n        <form className=\"login__box-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            id=\"userLogin\"\r\n            type=\"text\"\r\n            placeholder=\"Usuario\"\r\n            className=\"login__box-form__userName\"\r\n            autoComplete=\"off\"\r\n            name=\"userLogin\"\r\n            autoFocus=\"on\"\r\n            maxLength=\"50\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <div className=\"login__box-form__wrong-input\">\r\n            <span\r\n              className={`errorInput ${\r\n                errors.userLogin === \"noData\" ? \"visible animation\" : \"hidden\"\r\n              }`}\r\n            >\r\n              Ingrese usuario\r\n            </span>\r\n          </div>\r\n\r\n          <input\r\n            id=\"userPassword\"\r\n            className=\"login__box-form__userPassword\"\r\n            placeholder=\"Contraseña\"\r\n            name=\"userPassword\"\r\n            maxLength=\"50\"\r\n            type=\"password\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <div className=\"login__box-form__wrong-input\">\r\n            <span\r\n              className={`errorInput ${\r\n                errors.userPassword === \"noData\"\r\n                  ? \"visible animation\"\r\n                  : \"hidden\"\r\n              }`}\r\n            >\r\n              Ingrese contraseña\r\n            </span>\r\n          </div>\r\n\r\n          <button className=\"login__box-form__submit\" type=\"submit\">\r\n            Ingresar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setvalues] = useState(initialState)\r\n  const [errors, setErrors] = useState({\r\n    userLogin: \"data\",\r\n    userPassword: \"data\",\r\n  })\r\n\r\n  const reset = () => {\r\n    setvalues(initialState)\r\n  }\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    const val = target.name\r\n    if (values.val?.class.length > 0) {\r\n      setvalues({\r\n        ...values,\r\n        [target.name]: {\r\n          [target.name]: target.value,\r\n        },\r\n      })\r\n    } else {\r\n      setvalues({\r\n        ...values,\r\n        [target.name]: {\r\n          value: target.value,\r\n          classNameOriginal: target.className,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  const verification = ({ target }) => {\r\n    const user = target[0]\r\n    const pass = target[1]\r\n    let userStatus = \"\"\r\n    let passStatus = \"\"\r\n\r\n    if (user.value?.length < 1) {\r\n      userStatus = \"noData\"\r\n    } else {\r\n      userStatus = \"data\"\r\n    }\r\n\r\n    if (pass.value?.length < 1) {\r\n      passStatus = \"noData\"\r\n    } else {\r\n      passStatus = \"data\"\r\n    }\r\n\r\n    setErrors({\r\n      ...errors,\r\n      [user.id]: userStatus,\r\n      [pass.id]: passStatus,\r\n    })\r\n  }\r\n\r\n  return [values, errors, handleInputChange, reset, verification]\r\n}\r\n","import React from \"react\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  redirect,\r\n  ...rest\r\n}) => {\r\n  localStorage.setItem(\"lastPath\", rest.location.pathname)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to={redirect} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"\r\n\r\nimport { PublicRoute } from \"../routes/PublicRoute\"\r\nimport { AuthContext } from \"../auth/AuthContext\"\r\nimport { LoginScreen } from \"../components/Login/LoginScreen\"\r\nimport { PrivateRoute } from \"./PrivateRoute\"\r\n\r\nexport const AppRouter = () => {\r\n  const { user } = useContext(AuthContext)\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            isAuthenticated={user.logged}\r\n            path=\"/login\"\r\n            redirect=\"/\"\r\n            component={LoginScreen}\r\n          />\r\n          <PrivateRoute\r\n            isAuthenticated={user.logged}\r\n            path=\"/\"\r\n            redirect=\"/login\"\r\n            component={LoginScreen}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useEffect, useReducer } from \"react\"\r\n\r\nimport { AuthContext } from \"./auth/AuthContext\"\r\nimport { authReducer } from \"./auth/authReducer\"\r\nimport { AppRouter } from \"./routes/AppRouter\"\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\")) || { logged: false }\r\n}\r\n\r\nexport const App = () => {\r\n  const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(user))\r\n  }, [user])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, dispatch }}>\r\n      <AppRouter />\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { App } from \"./App\"\nimport \"./styles/styles.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}